{"version":3,"sources":["reportWebVitals.ts","page/json/JsonPage.tsx","App.tsx","page/time/TimePage.tsx","page/root/MainPage.tsx","page/code/CodePage.tsx","page/preview/PreviewPage.tsx","page/root/AppRoute.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","jsonlint","require","window","JsonPage","props","instance","timeObj","state","data","shortcutData","isAutoFormat","value","obj","JSON","parse","this","setState","stringify","e","Message","success","replace","RegExp","error","toString","className","onText","offText","style","zIndex","position","right","top","onChange","info","editorDidMount","editor","options","mode","gutters","theme","autofocus","styleActiveLine","lineNumbers","smartIndent","lineWrapping","foldGutter","lint","extraKeys","undo","redo","updateDataHandle","matchBrackets","autoCloseBrackets","clearTimeout","setTimeout","updateData","React","Component","App","src","alt","TimePage","MainPage","previewObject","onSelect","history","push","pathname","console","log","addEventListener","event","content","activeName","onTabClick","tab","name","Pane","label","children","CodePage","PreviewPage","lastTime","index","nowTime","Date","now","type","key","isHtmlContent","isMDContent","htmlStr","htmlContent","mdStr","mdContent","menuIndex","_renderLeftMenu","Row","Col","span","defaultActive","ItemGroup","title","map","showStr","Item","isEmptyContent","_renderHtml","_renderMD","dangerouslySetInnerHTML","__html","undefined","previewPageObj","location","Array","isArray","_renderEmptyContent","BasicRouter","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e44fa80f.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport './JsonPage.css';\r\nimport {IBaseProps} from \"../root/MainPage\";\r\n\r\nimport {UnControlled as CodeMirror} from 'react-codemirror2'\r\nimport 'codemirror/lib/codemirror.js'\r\nimport 'codemirror/lib/codemirror.css';\r\n// 主题风格\r\nimport 'codemirror/theme/solarized.css';\r\nimport \"codemirror/theme/rubyblue.css\";\r\n// 代码模式，clike是包含java,c++等模式的\r\nimport 'codemirror/mode/clike/clike';\r\nimport 'codemirror/mode/css/css';\r\n//ctrl+空格代码提示补全\r\nimport 'codemirror/addon/hint/show-hint.css';\r\nimport 'codemirror/addon/hint/show-hint';\r\nimport 'codemirror/addon/hint/anyword-hint.js';\r\n//代码高亮\r\nimport 'codemirror/addon/selection/active-line';\r\n//折叠代码\r\nimport 'codemirror/addon/fold/foldgutter.css';\r\nimport 'codemirror/addon/fold/foldcode.js';\r\nimport 'codemirror/addon/fold/foldgutter.js';\r\nimport 'codemirror/addon/fold/brace-fold.js';\r\nimport 'codemirror/addon/fold/comment-fold.js';\r\nimport 'codemirror/addon/edit/closebrackets';\r\n\r\n//json校验\r\nimport \"codemirror/mode/javascript/javascript\";//for json\r\nimport \"codemirror/addon/lint/lint\";//for json\r\nimport \"codemirror/addon/lint/json-lint\"; //for json\r\nimport \"codemirror/addon/lint/lint.css\"; //for json\r\n\r\n//搜索功能\r\nimport 'codemirror/addon/scroll/annotatescrollbar.js'\r\nimport 'codemirror/addon/search/matchesonscrollbar.js'\r\nimport 'codemirror/addon/search/match-highlighter.js'\r\nimport 'codemirror/addon/search/jump-to-line.js'\r\n\r\nimport 'codemirror/addon/dialog/dialog.js'\r\nimport 'codemirror/addon/dialog/dialog.css'\r\nimport 'codemirror/addon/search/searchcursor.js'\r\nimport 'codemirror/addon/search/search.js'\r\n\r\n\r\nimport {Message, Switch} from \"element-react\";\r\n\r\n\r\n\r\ndeclare global {\r\n    interface Window {\r\n        jsonlint: any\r\n    }\r\n}\r\n\r\nconst jsonlint = require(\"jsonlint-mod\");\r\nwindow.jsonlint = jsonlint\r\n\r\n\r\n\r\nexport interface IJsonPage extends IBaseProps{\r\n}\r\n\r\nexport default class JsonPage extends React.Component<IJsonPage>\r\n{\r\n    private instance:any\r\n    private timeObj:any\r\n    \r\n    constructor(props:IJsonPage) {\r\n        super(props);\r\n        this.instance = null;\r\n       \r\n    }\r\n    state = {\r\n        data:'{ \\n      \"1\":\"Json will auto format\",\\n\\n      \"2\":\"You can click switch button close auto format\",\\n\\n      \"3\":\"You can use (Shift+T) format by yourself\",\\n\\n      \"4\":\"You can use (Ctrl+F) search\" \\n}',\r\n        shortcutData:'{ \\n      \"1\":\"Json will auto format\",\\n\\n      \"2\":\"You can click switch button close auto format\",\\n\\n      \"3\":\"You can use (Shift+T) format by yourself\",\\n\\n      \"4\":\"You can use (Ctrl+F) search\" \\n}',\r\n        isAutoFormat:true\r\n    }\r\n\r\n    updateData(value: string){\r\n        try {\r\n            let obj = JSON.parse(value)\r\n            this.setState({\"data\":JSON.stringify(obj, null, 6)})\r\n        }catch (e) {\r\n            \r\n        }\r\n    }\r\n\r\n    updateDataHandle(value: any){\r\n        try {\r\n            this.setState({\"data\":value})  //此处需要设置一次，否则连续粘贴两次异常数据，数据不会更新\r\n            let obj = JSON.parse(value)\r\n            this.setState({\"data\":JSON.stringify(obj, null, 6)})\r\n            Message.success(\"Format success\");\r\n        }catch (e) {\r\n            try {\r\n                value = value.replace(new RegExp(\",\", \"gm\"), \",\\r\\n\");\r\n                this.setState({\"data\":value})\r\n                this.setState({\"shortcutData\":value})\r\n                jsonlint.parse(value);\r\n            } catch (e:any) {\r\n                Message.error(e.toString());\r\n            }\r\n        }\r\n    }\r\n    \r\n    //{ \"sites\": [ { \"name\":\"菜鸟教程\" , \"url\":\"www.runoob.com\" }, { \"name\":\"google\" , \"url\":\"www.google.com\" },{ \"name\":\"微博\" , \"url\":\"www.weibo.com\" } ] } 正常测试数据，连续粘贴两次\r\n    //{ \"sites\": [ { \"name\":\"菜鸟教程\" , \"url\":\"www.runoob.com\" }, { \"name\":\"google\" , \"url\":\"www.google.com\" }{ \"name\":\"微博\" , \"url\":\"www.weibo.com\" } ] }  异常测试数据，连续粘贴两次\r\n    \r\n    render() {\r\n        const {data}=this.state\r\n        let that=this\r\n        return (\r\n            <div className=\"JsonPage\">\r\n                {/*<Button type=\"primary\" style={{zIndex:1,position:\"absolute\",right:50,top:100}}>主要按钮</Button>*/}\r\n                <Switch\r\n                    value={this.state.isAutoFormat}\r\n                    onText=\"Auto\"\r\n                    offText=\"\"\r\n                    style={{zIndex:10,position:\"absolute\",right:50,top:80}}\r\n                    onChange={(value)=>{\r\n                        this.setState({isAutoFormat:value})\r\n                        if(!value)\r\n                        {\r\n                            Message.info(\"use (Shift+T) format\");\r\n                        }\r\n                    }}\r\n                >\r\n                </Switch>\r\n                <CodeMirror\r\n                    className = \"code-mirror\"\r\n                    editorDidMount={editor => { this.instance = editor }}\r\n                    value={data}\r\n                    options={{\r\n                        mode: \"application/json\", //for json\r\n                        gutters:[\"CodeMirror-lint-markers\",'CodeMirror-linenumbers','CodeMirror-foldgutter'],//CodeMirror-lint-markers for json\r\n                        theme: 'rubyblue',\r\n                        autofocus:true,//自动获取焦点\r\n                        styleActiveLine:true,//光标代码高亮\r\n                        lineNumbers: true, //显示行号\r\n                        smartIndent:true,  //自动缩进\r\n                        //start-设置支持代码折叠\r\n                        lineWrapping:true,\r\n                        foldGutter:true,\r\n                        lint: true,\r\n                        extraKeys:{\r\n                            //\"Ctrl\":\"autocomplete\",\r\n                            \"Ctrl-S\": function (editor:any) {\r\n                                //that.codeSave(editor)\r\n                            },\r\n                            \"Ctrl-Z\":function (editor:any) {\r\n                                editor.undo();\r\n                            },//undo\r\n                            \"F8\":function (editor:any) {\r\n                                editor.redo();\r\n                            },//Redo\r\n                            \"Shift-T\":(editor:any,data:any) => {\r\n                                this.updateDataHandle(this.state.shortcutData)\r\n                            },//Redo\r\n                        },\r\n                        matchBrackets: true,  //括号匹配，光标旁边的括号都高亮显示\r\n                        autoCloseBrackets: true //键入时将自动关闭()[]{}''\"\"\r\n                    }}\r\n                    onChange={(editor, data, value) => {\r\n                        this.setState({shortcutData:value}) //更新变量的值，否则下次粘贴相同数据不会刷新,主要用于快捷键格式化\r\n                        try {\r\n                            let obj = JSON.parse(value)\r\n                            let str = JSON.stringify(obj, null, 6)\r\n                            if(str == this.state.data)//如果当前state data里面的值和要格式化的值一致，则更新state里面的值，否则复制相同数据进入不会更新\r\n                            {\r\n                                this.setState({\"data\":value}) //不能每次都设置该值，否则数据变化的时候会导致光标变到最后\r\n                            }\r\n                        }catch (e) {\r\n                            \r\n                        }\r\n                        if(this.state.isAutoFormat) {\r\n                            if (this.timeObj) {\r\n                                clearTimeout(this.timeObj)\r\n                            }\r\n                            this.timeObj = setTimeout(() => {\r\n                                this.updateData(value)\r\n                            }, 1000);\r\n                        }\r\n                    }}\r\n                    // 在失去焦点的时候触发，这个时候放数据最好\r\n                    // onBlur={this.codeOnBlur}\r\n\r\n                    // // 这个必须加上，否则在一些情况下，第二次打开就会有问题\r\n                    // //     onBeforeChange={(editor, data, value) => {\r\n                    // //       console.log(\"onBeforeChange fresh\")\r\n                    // //       console.log(JSON.stringify(data));\r\n                    // //     }}\r\n                    //     /* HERE: pick out only the value. and might as well get name. */\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/*<img src={logo} className=\"App-logo\" alt=\"logo\" />*/}\n        <img src={\"https://www.leachchen.com/logo.svg\"} className=\"App-logo\" alt=\"logo\" />\n        <p>Developing...</p>\n       {/* <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>*/}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport {IBaseProps} from \"../root/MainPage\";\r\nimport './TimePage.css';\r\nimport App from \"../../App\";\r\n\r\nexport default class TimePage extends React.Component<IBaseProps>\r\n{\r\n    render() {\r\n        return (\r\n            /*<div className=\"TimePage\">\r\n                Time Page\r\n            </div>*/\r\n            <App/>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Menu, Tabs} from \"element-react\";\r\nimport './MainPage.css';\r\n\r\nexport interface IBaseProps {\r\n    history?:any;\r\n}\r\n\r\nexport interface IMainPagePageProps extends IBaseProps{\r\n}\r\n\r\nexport interface IMainPageState{\r\n    previewObject:any;\r\n}\r\n\r\nexport default class MainPage extends React.Component<IMainPagePageProps>\r\n{\r\n    state = {\r\n        previewObject:{}\r\n    }\r\n\r\n    constructor(props:IMainPagePageProps)\r\n    {\r\n        super(props)\r\n        window.addEventListener('message', event => { //监听来自vscode插件的消息数据\r\n            if(event?.data?.content) {\r\n                this.setState({\"previewObject\": event.data.content})\r\n            }\r\n        });\r\n    }\r\n\r\n    onSelect = (position:any) =>{\r\n        if(position == 1)\r\n        {\r\n            this.props.history?.push({pathname:\"jsonpage\"})\r\n        }else if (position == 2)\r\n        {\r\n            this.props.history?.push({pathname:\"previewpage\",state:{previewObject:this.state.previewObject}})\r\n        }else if (position == 3)\r\n        {\r\n            this.props.history?.push({pathname:\"timepage\"})\r\n        }else if (position == 4)\r\n        {\r\n            this.props.history?.push({pathname:\"codepage\"})\r\n        }\r\n        console.log(this.props.history)\r\n    }\r\n\r\n  \r\n    /*onSelect = (position:any) =>{\r\n        if(position == 1)\r\n        {\r\n            this.props.history?.push({pathname:\"jsonpage\"})\r\n        }else if (position == 2)\r\n        {\r\n            this.props.history?.push({pathname:\"previewpage\",state:{previewObject:this.state.previewObject}})\r\n        }else if (position == 3)\r\n        {\r\n            this.props.history?.push({pathname:\"timepage\"})\r\n        }else if (position == 4)\r\n        {\r\n            this.props.history?.push({pathname:\"codepage\"})\r\n        }\r\n        console.log(this.props.history)\r\n    }*/\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <Tabs activeName=\"1\" onTabClick={ (tab) => this.onSelect(tab.props.name) }>\r\n                    <Tabs.Pane label=\"Json\" name=\"1\"></Tabs.Pane>\r\n                    <Tabs.Pane label=\"Preview\" name=\"2\"></Tabs.Pane>\r\n                    <Tabs.Pane label=\"Time\" name=\"3\"></Tabs.Pane>\r\n                    <Tabs.Pane label=\"Code\" name=\"4\"></Tabs.Pane>\r\n                </Tabs>\r\n                \r\n                {/*<Menu theme=\"dark\" defaultActive=\"1\" className=\"el-menu-demo\" mode=\"horizontal\" onSelect={this.onSelect}>\r\n                    <Menu.Item index=\"1\">Json</Menu.Item>\r\n                    <Menu.Item index=\"2\">Preview</Menu.Item>\r\n                    <Menu.Item index=\"3\">Time</Menu.Item>\r\n                    <Menu.Item index=\"4\">Code</Menu.Item>\r\n                </Menu>*/}\r\n                {this.props.children}\r\n                {/*<Route exact path=\"/\" component={JsonPage}/>\r\n                <Route exact path=\"/jsonpage\" component={JsonPage}/>\r\n                <Route path=\"/timepage\" component={TimePage}/>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {IBaseProps} from \"../root/MainPage\";\r\nimport './CodePage.css';\r\nimport App from \"../../App\";\r\n\r\nexport default class CodePage extends React.Component<IBaseProps>\r\n{\r\n    render() {\r\n        return (\r\n            /*<div className=\"TimePage\">\r\n                Time Page\r\n            </div>*/\r\n            <App/>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport {IBaseProps} from \"../root/MainPage\";\r\nimport './PreviewPage.css';\r\nimport './github-markdown.css';\r\nimport {Layout, Menu} from 'element-react';\r\n\r\n//https://jingyan.baidu.com/article/6b18230972c3e6fb59e15929.html\r\n//https://www.bootcdn.cn/github-markdown-css\r\n//https://github.com/remarkjs/react-markdown\r\n//https://www.npmjs.com/package/react-markdown\r\n\r\nexport interface IPreviewPage extends IBaseProps{\r\n    previewObject:any;\r\n    location:any;\r\n}\r\n\r\nexport interface IPreviewState{\r\n    isEmptyContent:boolean;\r\n    isHtmlContent:boolean;\r\n    isMDContent:boolean;\r\n    htmlContent:string;\r\n    mdContent:string;\r\n    previewObject:any;\r\n    menuIndex:string;\r\n}\r\n\r\nexport default class PreviewPage extends React.Component<IPreviewPage,IPreviewState>\r\n{\r\n    private lastTime = 0\r\n    constructor(props:IPreviewPage,state:IPreviewState)\r\n    {\r\n        super(props)\r\n        this.state = {\r\n            isEmptyContent:false, //是否是空内容\r\n            isHtmlContent:false, //是否是html内容\r\n            isMDContent:false, //是否是markdown内容\r\n            htmlContent:\"\",//html 内容\r\n            mdContent:\"\",//markdown 内容\r\n            previewObject:undefined, //渲染数据\r\n            menuIndex:\"0\" //侧边菜单索引\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        let previewPageObj = this.props?.location?.state?.previewObject\r\n        if(Array.isArray(previewPageObj))\r\n        {\r\n            this.setState({previewObject:previewPageObj},()=>{\r\n                this.onSelect(0)\r\n            })\r\n        }else{\r\n            //this.setState({isEmptyContent:true,previewObject:undefined})\r\n            this.setState(\r\n                { previewObject:\r\n                        [\r\n                            /*{\"网址导航\": '<html>\\r\\n<head>\\r\\n  \\r\\n</head>\\r\\n<body>\\r\\n<div>\\r\\n   aaaaaaaaa\\r\\n</div>\\r\\n</body>\\r\\n\\r\\n</html>\\r\\n',\"type\":\"html\"},*/\r\n                            {\"页面配置\": '# html & markdown文件预览配置\\n' +\r\n                                    '\\n' +\r\n                                    '## 说明\\n' +\r\n                                    '\\n' +\r\n                                    '本页面提供本地html、markdown类型文件的批量预览管理功能，\\n' +\r\n                                    '当你看到本页面时，说明还未进行配置\\n' +\r\n                                    '\\n' +\r\n                                    '## 配置步骤\\n' +\r\n                                    '```\\n' +\r\n                                    '1:在项目根目录下创建dtconfig.json文件\\n' +\r\n                                    '\\n' +\r\n                                    '2：在里面配置类似如下内容：\\n' +\r\n                                    '{\\n' +\r\n                                    '  \"previewPage\": [\\n' +\r\n                                    '    {\"TestTitle1\": \"testFolder1/a.html\"},\\n' +\r\n                                    '    {\"TestTitle2\": \"testFolder2/b.md\"},\\n' +\r\n                                    '  ]\\n' +\r\n                                    '}\\n' +\r\n                                    '\\n' +\r\n                                    '3:文件预览只支持\".html\"、\".md\"后缀类型的文件\\n' +\r\n                                    '\\n' +\r\n                                    '4：在项目根目录下创建testFolder1、testFolder2文件夹，并且分别在对应目录下创建a.html,b.md文件。\\n' +\r\n                                    '（文件夹及文件名称可任意，要与步骤2配置中的对应）\\n' +\r\n                                    '\\n' +\r\n                                    '按照上述步骤配置，则可对指定目录下的文件进行预览管理\\n' +\r\n                                    '\\n' +\r\n                                    '```\\n',\"type\":\"md\"}\r\n                      ],\r\n                      isEmptyContent:false\r\n                },\r\n                ()=>{\r\n                    this.onSelect(0)\r\n                }\r\n             )\r\n        }\r\n    }\r\n\r\n    onSelect = (index:any)=>{\r\n        var nowTime = Date.now();\r\n        if((nowTime - this.lastTime)<100){\r\n            return\r\n        }\r\n        this.lastTime = nowTime;\r\n        let obj = this.state.previewObject[index]\r\n        if(obj.type == \"html\")\r\n        {\r\n            this.setState({isHtmlContent:true,isMDContent:false})\r\n            for(let key in obj)\r\n            {\r\n                if(key != \"type\")\r\n                {\r\n                    const htmlStr = obj[key]\r\n                    this.setState({htmlContent:htmlStr})\r\n                }\r\n            }\r\n        }else\r\n        {\r\n            this.setState({isHtmlContent:false,isMDContent:true})\r\n            for(let key in obj)\r\n            {\r\n                if(key != \"type\")\r\n                {\r\n                    const mdStr = obj[key]\r\n                    this.setState({mdContent:mdStr})\r\n                }\r\n            }\r\n        }\r\n        this.setState({menuIndex:index})\r\n    }\r\n    \r\n    _renderLeftMenu = ()=> {\r\n        return (\r\n            /*<Layout.Row style={{display:\"flex\",justifyContent:\"center\"}}>*/\r\n            <Layout.Row>\r\n                <Layout.Col span=\"3\" className=\"cl-col1\">\r\n                    <div className=\"grid-content bg-purple\">\r\n                        <Menu mode=\"vertical\" defaultActive={this.state.menuIndex} className=\"el-menu-vertical-demo\" onSelect = {this.onSelect}>\r\n                            <Menu.ItemGroup title=\"\">\r\n                               {\r\n                                    this.state.previewObject?.map((obj: any, position: number)=>{\r\n                                        let showStr = \"\"\r\n                                        for(let key in obj)\r\n                                        {\r\n                                            {\r\n                                                if(key != \"type\")\r\n                                                {\r\n                                                    showStr = key\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        return <Menu.Item index={\"\"+position} key={\"\"+position}><i className=\"el-icon-message\"></i>{showStr}</Menu.Item>\r\n                                    })\r\n                                }\r\n                            </Menu.ItemGroup>\r\n                        </Menu>\r\n                    </div>\r\n                </Layout.Col>\r\n                {\r\n                    !this.state.isEmptyContent && this.state.isHtmlContent && this._renderHtml()\r\n                }\r\n                {\r\n                    !this.state.isEmptyContent && this.state.isMDContent && this._renderMD()\r\n                }\r\n            </Layout.Row>\r\n        )\r\n    }\r\n    \r\n    //Layout.Col100%是24\r\n    _renderHtml = ()=> {\r\n        return (\r\n            <Layout.Col span=\"15\">\r\n                <div className=\"htmlContent\">\r\n                     <div dangerouslySetInnerHTML={{__html:this.state.htmlContent}}></div>\r\n                </div>    \r\n            </Layout.Col>\r\n        )\r\n    }\r\n\r\n    _renderMD = ()=> {\r\n        return (\r\n            <Layout.Col span=\"15\">\r\n                <div className=\"mdContent\">\r\n                    <ReactMarkdown children={this.state.mdContent} className = \"markdown-body\"/>\r\n                </div>\r\n            </Layout.Col>\r\n        )\r\n    }\r\n    \r\n    _renderEmptyContent(){\r\n        return (\r\n            <div>please config content</div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"PreviewPage\">\r\n                {\r\n                  this.state.isEmptyContent && this._renderEmptyContent()\r\n                }\r\n                { !this.state.isEmptyContent && this._renderLeftMenu()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\r\nimport JsonPage from \"../json/JsonPage\";\r\nimport TimePage from \"../time/TimePage\";\r\nimport MainPage from \"./MainPage\";\r\nimport CodePage from \"../code/CodePage\";\r\nimport PreviewPage from \"../preview/PreviewPage\";\r\n\r\nconst BasicRouter = () => (\r\n    <HashRouter>\r\n        <Switch>\r\n            <Route path=\"/\" component={(props:any)=>(\r\n                    <MainPage {...props}>\r\n                        <Route exact path=\"/\" component={JsonPage}/>\r\n                        <Route exact path=\"/jsonpage\" component={JsonPage}/>\r\n                        <Route exact path=\"/previewpage\" component={PreviewPage}/>\r\n                        <Route  path=\"/timepage\" component={TimePage}/>\r\n                        <Route  path=\"/codepage\" component={CodePage}/>\r\n                    </MainPage>\r\n                )\r\n            }/>\r\n        </Switch>\r\n    </HashRouter>\r\n);\r\n\r\n\r\nexport default BasicRouter;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'element-theme-default';\nimport BasicRouter from './page/root/AppRoute';\n\nReactDOM.render(\n /* <React.StrictMode>\n    <App />\n  </React.StrictMode>,*/\n/*   <HashRouter>\n        <Switch>\n            <Route exact path=\"/\" component={MainPage}/>\n        </Switch>\n   </HashRouter>,*/\n   <BasicRouter />,\n   document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}