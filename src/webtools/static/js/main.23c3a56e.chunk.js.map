{"version":3,"sources":["reportWebVitals.ts","page/json/JsonPage.tsx","utils/TimeUtil.ts","page/time/TimePage.tsx","page/root/MainPage.tsx","App.tsx","page/code/CodePage.tsx","page/preview/PreviewPage.tsx","page/root/AppRoute.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","jsonlint","require","window","JsonPage","props","instance","timeObj","state","data","shortcutData","isAutoFormat","value","obj","JSON","parse","this","setState","stringify","e","Message","success","replace","RegExp","error","toString","className","onText","offText","style","zIndex","position","right","top","onChange","info","editorDidMount","editor","options","mode","gutters","theme","autofocus","styleActiveLine","lineNumbers","smartIndent","lineWrapping","foldGutter","lint","extraKeys","undo","redo","updateDataHandle","matchBrackets","autoCloseBrackets","clearTimeout","setTimeout","updateData","React","Component","TimeUtil","Date","getTime","timeMS","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","timeStr","TimePage","timeId","repeatTime","setInterval","isTimeRepeat","timeNowMs","getNowTimeMS","timeNowStr","timemsToTimestr","controlTimeUpdate","isOpen","updateTimeMS","inputValueMS","inputValueS","parseInt","inputValueTimeMs","inputValueTimeS","tranTime","tranValueMs","Number","tranValueS","tranValueStrMs","timestrToTimems","tranValueStrS","isSwitchOpen","clearInterval","fontSize","margin","display","flexDirection","alignItems","width","textAlign","marginRight","color","textDecoration","cursor","onClick","onColor","offColor","placeholder","marginLeft","type","marginTop","MainPage","previewObject","onSelect","history","push","pathname","console","log","addEventListener","event","content","activeName","onTabClick","tab","name","Pane","label","children","App","src","alt","CodePage","PreviewPage","lastTime","index","nowTime","now","key","isHtmlContent","isMDContent","htmlStr","htmlContent","mdStr","mdContent","menuIndex","_renderLeftMenu","Row","Col","span","defaultActive","ItemGroup","title","map","showStr","Item","isEmptyContent","_renderHtml","_renderMD","dangerouslySetInnerHTML","__html","remarkPlugins","remarkGfm","rehypePlugins","rehypeRaw","undefined","previewPageObj","location","Array","isArray","_renderEmptyContent","BasicRouter","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23c3a56e.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport './JsonPage.css';\r\nimport {IBaseProps} from \"../root/MainPage\";\r\n\r\nimport {UnControlled as CodeMirror} from 'react-codemirror2'\r\nimport 'codemirror/lib/codemirror.js'\r\nimport 'codemirror/lib/codemirror.css';\r\n// 主题风格\r\nimport 'codemirror/theme/solarized.css';\r\nimport \"codemirror/theme/rubyblue.css\";\r\n// 代码模式，clike是包含java,c++等模式的\r\nimport 'codemirror/mode/clike/clike';\r\nimport 'codemirror/mode/css/css';\r\n//ctrl+空格代码提示补全\r\nimport 'codemirror/addon/hint/show-hint.css';\r\nimport 'codemirror/addon/hint/show-hint';\r\nimport 'codemirror/addon/hint/anyword-hint.js';\r\n//代码高亮\r\nimport 'codemirror/addon/selection/active-line';\r\n//折叠代码\r\nimport 'codemirror/addon/fold/foldgutter.css';\r\nimport 'codemirror/addon/fold/foldcode.js';\r\nimport 'codemirror/addon/fold/foldgutter.js';\r\nimport 'codemirror/addon/fold/brace-fold.js';\r\nimport 'codemirror/addon/fold/comment-fold.js';\r\nimport 'codemirror/addon/edit/closebrackets';\r\n\r\n//json校验\r\nimport \"codemirror/mode/javascript/javascript\";//for json\r\nimport \"codemirror/addon/lint/lint\";//for json\r\nimport \"codemirror/addon/lint/json-lint\"; //for json\r\nimport \"codemirror/addon/lint/lint.css\"; //for json\r\n\r\n//搜索功能\r\nimport 'codemirror/addon/scroll/annotatescrollbar.js'\r\nimport 'codemirror/addon/search/matchesonscrollbar.js'\r\nimport 'codemirror/addon/search/match-highlighter.js'\r\nimport 'codemirror/addon/search/jump-to-line.js'\r\n\r\nimport 'codemirror/addon/dialog/dialog.js'\r\nimport 'codemirror/addon/dialog/dialog.css'\r\nimport 'codemirror/addon/search/searchcursor.js'\r\nimport 'codemirror/addon/search/search.js'\r\n\r\n\r\nimport {Message, Switch} from \"element-react\";\r\n\r\n\r\n\r\ndeclare global {\r\n    interface Window {\r\n        jsonlint: any\r\n    }\r\n}\r\n\r\nconst jsonlint = require(\"jsonlint-mod\");\r\nwindow.jsonlint = jsonlint\r\n\r\n\r\n\r\nexport interface IJsonPage extends IBaseProps{\r\n}\r\n\r\nexport default class JsonPage extends React.Component<IJsonPage>\r\n{\r\n    private instance:any\r\n    private timeObj:any\r\n    \r\n    constructor(props:IJsonPage) {\r\n        super(props);\r\n        this.instance = null;\r\n       \r\n    }\r\n    state = {\r\n        data:'{ \\n      \"1\":\"Json will auto format\",\\n\\n      \"2\":\"You can click switch button close auto format\",\\n\\n      \"3\":\"You can use (Shift+T) format by yourself\",\\n\\n      \"4\":\"You can use (Ctrl+F) search\" \\n}',\r\n        shortcutData:'{ \\n      \"1\":\"Json will auto format\",\\n\\n      \"2\":\"You can click switch button close auto format\",\\n\\n      \"3\":\"You can use (Shift+T) format by yourself\",\\n\\n      \"4\":\"You can use (Ctrl+F) search\" \\n}',\r\n        isAutoFormat:true\r\n    }\r\n\r\n    updateData(value: string){\r\n        try {\r\n            let obj = JSON.parse(value)\r\n            this.setState({\"data\":JSON.stringify(obj, null, 6)})\r\n        }catch (e) {\r\n            \r\n        }\r\n    }\r\n\r\n    updateDataHandle(value: any){\r\n        try {\r\n            this.setState({\"data\":value})  //此处需要设置一次，否则连续粘贴两次异常数据，数据不会更新\r\n            let obj = JSON.parse(value)\r\n            this.setState({\"data\":JSON.stringify(obj, null, 6)})\r\n            Message.success(\"Format success\");\r\n        }catch (e) {\r\n            try {\r\n                value = value.replace(new RegExp(\",\", \"gm\"), \",\\r\\n\");\r\n                this.setState({\"data\":value})\r\n                this.setState({\"shortcutData\":value})\r\n                jsonlint.parse(value);\r\n            } catch (e:any) {\r\n                Message.error(e.toString());\r\n            }\r\n        }\r\n    }\r\n    \r\n    //{ \"sites\": [ { \"name\":\"菜鸟教程\" , \"url\":\"www.runoob.com\" }, { \"name\":\"google\" , \"url\":\"www.google.com\" },{ \"name\":\"微博\" , \"url\":\"www.weibo.com\" } ] } 正常测试数据，连续粘贴两次\r\n    //{ \"sites\": [ { \"name\":\"菜鸟教程\" , \"url\":\"www.runoob.com\" }, { \"name\":\"google\" , \"url\":\"www.google.com\" }{ \"name\":\"微博\" , \"url\":\"www.weibo.com\" } ] }  异常测试数据，连续粘贴两次\r\n    \r\n    render() {\r\n        const {data}=this.state\r\n        let that=this\r\n        return (\r\n            <div className=\"JsonPage\">\r\n                {/*<Button type=\"primary\" style={{zIndex:1,position:\"absolute\",right:50,top:100}}>主要按钮</Button>*/}\r\n                <Switch\r\n                    value={this.state.isAutoFormat}\r\n                    onText=\"Auto\"\r\n                    offText=\"\"\r\n                    style={{zIndex:10,position:\"absolute\",right:50,top:80}}\r\n                    onChange={(value)=>{\r\n                        this.setState({isAutoFormat:value})\r\n                        if(!value)\r\n                        {\r\n                            Message.info(\"use (Shift+T) format\");\r\n                        }\r\n                    }}\r\n                >\r\n                </Switch>\r\n                <CodeMirror\r\n                    className = \"code-mirror\"\r\n                    editorDidMount={editor => { this.instance = editor }}\r\n                    value={data}\r\n                    options={{\r\n                        mode: \"application/json\", //for json\r\n                        gutters:[\"CodeMirror-lint-markers\",'CodeMirror-linenumbers','CodeMirror-foldgutter'],//CodeMirror-lint-markers for json\r\n                        theme: 'rubyblue',\r\n                        autofocus:true,//自动获取焦点\r\n                        styleActiveLine:true,//光标代码高亮\r\n                        lineNumbers: true, //显示行号\r\n                        smartIndent:true,  //自动缩进\r\n                        //start-设置支持代码折叠\r\n                        lineWrapping:true,\r\n                        foldGutter:true,\r\n                        lint: true,\r\n                        extraKeys:{\r\n                            //\"Ctrl\":\"autocomplete\",\r\n                            \"Ctrl-S\": function (editor:any) {\r\n                                //that.codeSave(editor)\r\n                            },\r\n                            \"Ctrl-Z\":function (editor:any) {\r\n                                editor.undo();\r\n                            },//undo\r\n                            \"F8\":function (editor:any) {\r\n                                editor.redo();\r\n                            },//Redo\r\n                            \"Shift-T\":(editor:any,data:any) => {\r\n                                this.updateDataHandle(this.state.shortcutData)\r\n                            },//Redo\r\n                        },\r\n                        matchBrackets: true,  //括号匹配，光标旁边的括号都高亮显示\r\n                        autoCloseBrackets: true //键入时将自动关闭()[]{}''\"\"\r\n                    }}\r\n                    onChange={(editor, data, value) => {\r\n                        this.setState({shortcutData:value}) //更新变量的值，否则下次粘贴相同数据不会刷新,主要用于快捷键格式化\r\n                        try {\r\n                            let obj = JSON.parse(value)\r\n                            let str = JSON.stringify(obj, null, 6)\r\n                            if(str == this.state.data)//如果当前state data里面的值和要格式化的值一致，则更新state里面的值，否则复制相同数据进入不会更新\r\n                            {\r\n                                this.setState({\"data\":value}) //不能每次都设置该值，否则数据变化的时候会导致光标变到最后\r\n                            }\r\n                        }catch (e) {\r\n                            \r\n                        }\r\n                        if(this.state.isAutoFormat) {\r\n                            if (this.timeObj) {\r\n                                clearTimeout(this.timeObj)\r\n                            }\r\n                            this.timeObj = setTimeout(() => {\r\n                                this.updateData(value)\r\n                            }, 1000);\r\n                        }\r\n                    }}\r\n                    // 在失去焦点的时候触发，这个时候放数据最好\r\n                    // onBlur={this.codeOnBlur}\r\n\r\n                    // // 这个必须加上，否则在一些情况下，第二次打开就会有问题\r\n                    // //     onBeforeChange={(editor, data, value) => {\r\n                    // //       console.log(\"onBeforeChange fresh\")\r\n                    // //       console.log(JSON.stringify(data));\r\n                    // //     }}\r\n                    //     /* HERE: pick out only the value. and might as well get name. */\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\r\nexport class TimeUtil {\r\n\r\n    /**\r\n     * 获取当前时间毫秒数\r\n     */\r\n    public static getNowTimeMS(){\r\n        return new Date().getTime();\r\n    }\r\n\r\n    /**\r\n     * 根据时间戳获取格式化时间\r\n     * @param timeMS\r\n     */\r\n    public static timemsToTimestr(timeMS:any) {\r\n        var date = new Date(timeMS);\r\n        var YY = date.getFullYear() + '-';\r\n        var MM = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\r\n        var DD = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate());\r\n        var hh = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\r\n        var mm = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\r\n        var ss = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds());\r\n        return YY + MM + DD +\" \"+hh + mm + ss;\r\n    }\r\n\r\n    /**\r\n     * 字符串时间转时间戳\r\n     * @param timeStr\r\n     */\r\n    public static timestrToTimems(timeStr:string){\r\n        var date = timeStr;\r\n        date = date.replace(/-/g,'/'); //必须把日期'-'转为'/'\r\n        var timestamp = new Date(date).getTime();\r\n        return timestamp\r\n    }\r\n    \r\n}\r\n","import React from 'react';\r\nimport {IBaseProps} from \"../root/MainPage\";\r\nimport './TimePage.css';\r\nimport App from \"../../App\";\r\nimport {Button, Card, Input, Switch} from \"element-react\";\r\nimport {TimeUtil} from \"../../utils/TimeUtil\";\r\n\r\n\r\ninterface ITimePageState{\r\n    isTimeRepeat:boolean; //是否停止计时\r\n    timeNowMs:any; //当前时间毫秒数\r\n    timeNowStr:any; //当前时间\r\n    isSwitchOpen:number|string|boolean; //switch开关值\r\n    inputValueMS:any; //输入框值ms\r\n    inputValueS:any; //输入框值s\r\n    inputValueTimeMs:any; //输入框当前时间值1\r\n    inputValueTimeS:any; //输入框当前时间值2\r\n    tranValueMs:any; //毫秒转时间\r\n    tranValueS:any; //秒转时间\r\n    tranValueStrMs:any; //时间转毫秒\r\n    tranValueStrS:any; //时间转秒\r\n}\r\n\r\n\r\nexport default class TimePage extends React.Component<IBaseProps,ITimePageState>\r\n{\r\n    private timeId:any\r\n    constructor(props:IBaseProps) {\r\n        super(props);\r\n        this.state = {\r\n            isTimeRepeat:true,\r\n            timeNowMs:TimeUtil.getNowTimeMS(),\r\n            timeNowStr:TimeUtil.timemsToTimestr(TimeUtil.getNowTimeMS()),\r\n            isSwitchOpen:true,\r\n            inputValueMS:\"\",\r\n            inputValueS:\"\",\r\n            inputValueTimeMs:\"\",\r\n            inputValueTimeS:\"\",\r\n            tranValueMs:\"\",\r\n            tranValueS:\"\",\r\n            tranValueStrMs:\"\",\r\n            tranValueStrS:\"\",\r\n        }\r\n        this.repeatTime()\r\n    }\r\n\r\n    /**\r\n     * 定时获取时间\r\n     */\r\n    repeatTime = ()=> {\r\n        this.timeId = setInterval(()=>{\r\n            if(this.state.isTimeRepeat)\r\n            {\r\n                this.setState({timeNowMs:TimeUtil.getNowTimeMS()})\r\n                this.setState({timeNowStr:TimeUtil.timemsToTimestr(TimeUtil.getNowTimeMS())})\r\n            }\r\n        },1000)\r\n    }\r\n\r\n    /**\r\n     * switch开关函数\r\n     * @param isOpen\r\n     */\r\n    controlTimeUpdate = (isOpen:number|string|boolean)=>{\r\n        if(isOpen)\r\n        {\r\n            this.setState({isTimeRepeat:true})\r\n        }else{\r\n            this.setState({isTimeRepeat:false})\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新当前时间到输入框\r\n     */\r\n    updateTimeMS = ()=>{\r\n        this.setState({inputValueMS:this.state.timeNowMs})\r\n        this.setState({inputValueS:parseInt(\"\"+(this.state.timeNowMs / 1000))})\r\n        this.setState({inputValueTimeMs:TimeUtil.timemsToTimestr(this.state.timeNowMs)})\r\n        this.setState({inputValueTimeS:TimeUtil.timemsToTimestr(this.state.timeNowMs)})\r\n        \r\n        //1630664355946\r\n        //1630664355000\r\n        //2021-09-03 18:19:15\r\n        //console.log(\"aaaaaaaaaaaaaaaaaaaaaaaaaaa:\"+TimeUtil.timestrToTimems(\"2021-09-03 18:19:15\"))\r\n    }\r\n\r\n    /**\r\n     * 转换时间\r\n     */\r\n    tranTime = ()=> {\r\n        if(this.state.inputValueMS)\r\n        {\r\n            this.setState({tranValueMs:TimeUtil.timemsToTimestr(Number(this.state.inputValueMS))})\r\n        }else{\r\n            this.setState({tranValueMs:\"\"})\r\n        }\r\n        if(this.state.inputValueS)\r\n        {\r\n            this.setState({tranValueS:TimeUtil.timemsToTimestr(Number(this.state.inputValueS * 1000))})\r\n        }else{\r\n            this.setState({tranValueS:\"\"})\r\n        }\r\n        if(this.state.inputValueTimeMs)\r\n        {\r\n            this.setState({tranValueStrMs:TimeUtil.timestrToTimems(this.state.inputValueTimeMs)})\r\n        }else{\r\n            this.setState({tranValueStrMs:\"\"})\r\n        }\r\n        if(this.state.inputValueTimeS)\r\n        {\r\n            this.setState({tranValueStrS:parseInt(\"\"+(TimeUtil.timestrToTimems(this.state.inputValueTimeS) / 1000))})\r\n        }else{\r\n            this.setState({tranValueStrS:\"\"})\r\n        }\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        clearInterval(this.timeId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"TimePage\">\r\n                <div className=\"content\">\r\n                    <div style={{fontSize:\"20px\",margin:\"10px\"}}>时间戳转换</div>\r\n                    <hr/>\r\n                    <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\",margin:\"20px\"}}>\r\n                        <div style={{fontSize:\"16px\",width:\"100px\",textAlign:\"right\"}}>当前时间：</div>\r\n                        <div  style={{fontSize:\"16px\",marginRight:\"20px\",color:\"#20A0FF\", textDecoration:\"underline\",cursor:\"pointer\"}} onClick={this.updateTimeMS}>{this.state.timeNowMs}</div>\r\n                        <div  style={{fontSize:\"16px\",marginRight:\"20px\",color:\"#20A0FF\", textDecoration:\"underline\",cursor:\"pointer\"}} onClick={this.updateTimeMS}>{this.state.timeNowStr}</div>\r\n                        <Switch\r\n                            value={this.state.isSwitchOpen}\r\n                            onColor=\"#13ce66\"\r\n                            offColor=\"#ff4949\"\r\n                            onChange = {(value:number|string|boolean)=>{\r\n                                this.setState({isSwitchOpen:value})\r\n                                this.controlTimeUpdate(value)\r\n                            }}\r\n                        >\r\n                        </Switch>\r\n                    </div>\r\n                    \r\n                    <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\",margin:\"20px\"}}>\r\n                        <div style={{fontSize:\"14px\",width:\"100px\",textAlign:\"right\"}}>时间戳(毫秒)：</div>\r\n                        <Input placeholder=\"\" value={this.state.inputValueMS} onChange={(value)=>{\r\n                            this.setState({inputValueMS:value})\r\n                        }}/>\r\n                        <div style={{fontSize:\"14px\",marginLeft:\"10px\"}}>》》</div>\r\n                        <div style={{fontSize:\"16px\",marginLeft:\"10px\"}}>{this.state.tranValueMs}</div>\r\n                    </div>\r\n\r\n                    <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\",margin:\"20px\"}}>\r\n                        <div style={{fontSize:\"14px\",width:\"100px\",textAlign:\"right\"}}>时间(秒)：</div>\r\n                        <Input placeholder=\"\"  value={this.state.inputValueS}  onChange={(value)=>{\r\n                            this.setState({inputValueS:value})\r\n                        }}/>\r\n                        <div style={{fontSize:\"14px\",marginLeft:\"10px\"}}>》》</div>\r\n                        <div  style={{fontSize:\"16px\",marginLeft:\"10px\"}}>{this.state.tranValueS}</div>\r\n                    </div>\r\n\r\n                    <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\",margin:\"20px\"}}>\r\n                        <div style={{fontSize:\"14px\",width:\"100px\",textAlign:\"right\"}}>时间：</div>\r\n                        <Input placeholder=\"\"  value={this.state.inputValueTimeMs}  onChange={(value)=>{\r\n                            this.setState({inputValueTimeMs:value})\r\n                        }}/>\r\n                        <div style={{fontSize:\"14px\",marginLeft:\"10px\"}}>》》</div>\r\n                        <div  style={{fontSize:\"16px\",marginLeft:\"10px\"}}>{this.state.tranValueStrMs?(this.state.tranValueStrMs+\"（毫秒）\"):\"\"}</div>\r\n                    </div>\r\n\r\n                    <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\",margin:\"20px\"}}>\r\n                        <div style={{fontSize:\"14px\",width:\"100px\",textAlign:\"right\"}}>时间：</div>\r\n                        <Input placeholder=\"\"  value={this.state.inputValueTimeS}  onChange={(value)=>{\r\n                            this.setState({inputValueTimeS:value})\r\n                        }}/>\r\n                        <div style={{fontSize:\"14px\",marginLeft:\"10px\"}}>》》</div>\r\n                        <div  style={{fontSize:\"16px\",marginLeft:\"10px\"}}>{this.state.tranValueStrS?(this.state.tranValueStrS+\"（秒）\"):\"\"}</div>\r\n                    </div>\r\n                    <div style={{textAlign:\"center\"}}>\r\n                        <Button type=\"primary\" style={{width:\"100px\",marginTop:\"30px\"}} onClick={this.tranTime}>转换</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            /*<App/>*/\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Menu, Tabs} from \"element-react\";\r\nimport './MainPage.css';\r\n\r\nexport interface IBaseProps {\r\n    history?:any;\r\n}\r\n\r\nexport interface IMainPagePageProps extends IBaseProps{\r\n}\r\n\r\nexport interface IMainPageState{\r\n    previewObject:any;\r\n}\r\n\r\nexport default class MainPage extends React.Component<IMainPagePageProps>\r\n{\r\n    state = {\r\n        previewObject:{}\r\n    }\r\n\r\n    constructor(props:IMainPagePageProps)\r\n    {\r\n        super(props)\r\n        window.addEventListener('message', event => { //监听来自vscode插件的消息数据\r\n            if(event?.data?.content) {\r\n                this.setState({\"previewObject\": event.data.content})\r\n            }\r\n        });\r\n    }\r\n\r\n    onSelect = (position:any) =>{\r\n        if(position == 1)\r\n        {\r\n            this.props.history?.push({pathname:\"jsonpage\"})\r\n        }else if (position == 2)\r\n        {\r\n            this.props.history?.push({pathname:\"previewpage\",state:{previewObject:this.state.previewObject}})\r\n        }else if (position == 3)\r\n        {\r\n            this.props.history?.push({pathname:\"timepage\"})\r\n        }else if (position == 4)\r\n        {\r\n            this.props.history?.push({pathname:\"codepage\"})\r\n        }\r\n        console.log(this.props.history)\r\n    }\r\n\r\n  \r\n    /*onSelect = (position:any) =>{\r\n        if(position == 1)\r\n        {\r\n            this.props.history?.push({pathname:\"jsonpage\"})\r\n        }else if (position == 2)\r\n        {\r\n            this.props.history?.push({pathname:\"previewpage\",state:{previewObject:this.state.previewObject}})\r\n        }else if (position == 3)\r\n        {\r\n            this.props.history?.push({pathname:\"timepage\"})\r\n        }else if (position == 4)\r\n        {\r\n            this.props.history?.push({pathname:\"codepage\"})\r\n        }\r\n        console.log(this.props.history)\r\n    }*/\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <Tabs activeName=\"1\" onTabClick={ (tab) => this.onSelect(tab.props.name) }>\r\n                    <Tabs.Pane label=\"Json\" name=\"1\"></Tabs.Pane>\r\n                    <Tabs.Pane label=\"Preview\" name=\"2\"></Tabs.Pane>\r\n                    <Tabs.Pane label=\"Time\" name=\"3\"></Tabs.Pane>\r\n                    <Tabs.Pane label=\"Code\" name=\"4\"></Tabs.Pane>\r\n                </Tabs>\r\n                \r\n                {/*<Menu theme=\"dark\" defaultActive=\"1\" className=\"el-menu-demo\" mode=\"horizontal\" onSelect={this.onSelect}>\r\n                    <Menu.Item index=\"1\">Json</Menu.Item>\r\n                    <Menu.Item index=\"2\">Preview</Menu.Item>\r\n                    <Menu.Item index=\"3\">Time</Menu.Item>\r\n                    <Menu.Item index=\"4\">Code</Menu.Item>\r\n                </Menu>*/}\r\n                {this.props.children}\r\n                {/*<Route exact path=\"/\" component={JsonPage}/>\r\n                <Route exact path=\"/jsonpage\" component={JsonPage}/>\r\n                <Route path=\"/timepage\" component={TimePage}/>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        {/*<img src={logo} className=\"App-logo\" alt=\"logo\" />*/}\r\n        <img src={\"https://www.leachchen.com/logo.svg\"} className=\"App-logo\" alt=\"logo\" />\r\n        <p>Developing...</p>\r\n       {/* <p>\r\n          Edit <code>src/App.tsx</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>*/}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport {IBaseProps} from \"../root/MainPage\";\r\nimport './CodePage.css';\r\nimport App from \"../../App\";\r\n\r\nexport default class CodePage extends React.Component<IBaseProps>\r\n{\r\n    render() {\r\n        return (\r\n            /*<div className=\"TimePage\">\r\n                Time Page\r\n            </div>*/\r\n            <App/>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport {IBaseProps} from \"../root/MainPage\";\r\nimport './PreviewPage.css';\r\nimport './github-markdown.css';\r\nimport {Layout, Menu} from 'element-react';\r\nimport remarkGfm from 'remark-gfm'\r\nimport rehypeRaw from 'rehype-raw'\r\n\r\n//https://jingyan.baidu.com/article/6b18230972c3e6fb59e15929.html\r\n//https://www.bootcdn.cn/github-markdown-css\r\n//https://github.com/remarkjs/react-markdown\r\n//https://www.npmjs.com/package/react-markdown\r\n//https://gitee.com/uiw/react-markdown-preview\r\n\r\nexport interface IPreviewPage extends IBaseProps{\r\n    previewObject:any;\r\n    location:any;\r\n}\r\n\r\nexport interface IPreviewState{\r\n    isEmptyContent:boolean;\r\n    isHtmlContent:boolean;\r\n    isMDContent:boolean;\r\n    htmlContent:string;\r\n    mdContent:string;\r\n    previewObject:any;\r\n    menuIndex:string;\r\n}\r\n\r\nexport default class PreviewPage extends React.Component<IPreviewPage,IPreviewState>\r\n{\r\n    private lastTime = 0\r\n    constructor(props:IPreviewPage,state:IPreviewState)\r\n    {\r\n        super(props)\r\n        this.state = {\r\n            isEmptyContent:false, //是否是空内容\r\n            isHtmlContent:false, //是否是html内容\r\n            isMDContent:false, //是否是markdown内容\r\n            htmlContent:\"\",//html 内容\r\n            mdContent:\"\",//markdown 内容\r\n            previewObject:undefined, //渲染数据\r\n            menuIndex:\"0\" //侧边菜单索引\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        let previewPageObj = this.props?.location?.state?.previewObject\r\n        if(Array.isArray(previewPageObj))\r\n        {\r\n            this.setState({previewObject:previewPageObj},()=>{\r\n                this.onSelect(0)\r\n            })\r\n        }else{\r\n            //this.setState({isEmptyContent:true,previewObject:undefined})\r\n            this.setState(\r\n                { previewObject:\r\n                        [\r\n                            /*{\"网址导航\": '<html>\\r\\n<head>\\r\\n  \\r\\n</head>\\r\\n<body>\\r\\n<div>\\r\\n   aaaaaaaaa\\r\\n</div>\\r\\n</body>\\r\\n\\r\\n</html>\\r\\n',\"type\":\"html\"},*/\r\n                            {\"页面配置\": '# html & markdown文件预览配置\\n' +\r\n                                    '\\n' +\r\n                                    '## 说明\\n' +\r\n                                    '\\n' +\r\n                                    '本页面提供本地html、markdown类型文件的批量预览管理功能，\\n' +\r\n                                    '当你看到本页面时，说明还未进行配置\\n' +\r\n                                    '\\n' +\r\n                                    '## 配置步骤\\n' +\r\n                                    '```\\n' +\r\n                                    '1:在项目根目录下创建dtconfig.json文件\\n' +\r\n                                    '\\n' +\r\n                                    '2：在里面配置类似如下内容：\\n' +\r\n                                    '{\\n' +\r\n                                    '  \"previewPage\": [\\n' +\r\n                                    '    {\"TestTitle1\": \"testFolder1/a.html\"},\\n' +\r\n                                    '    {\"TestTitle2\": \"testFolder2/b.md\"},\\n' +\r\n                                    '  ]\\n' +\r\n                                    '}\\n' +\r\n                                    '\\n' +\r\n                                    '3:文件预览只支持\".html\"、\".md\"后缀类型的文件\\n' +\r\n                                    '\\n' +\r\n                                    '4：在项目根目录下创建testFolder1、testFolder2文件夹，并且分别在对应目录下创建a.html,b.md文件。\\n' +\r\n                                    '（文件夹及文件名称可任意，要与步骤2配置中的对应）\\n' +\r\n                                    '\\n' +\r\n                                    '按照上述步骤配置，则可对指定目录下的文件进行预览管理\\n' +\r\n                                    '\\n' +\r\n                                    '```\\n',\"type\":\"md\"}\r\n                      ],\r\n                      isEmptyContent:false\r\n                },\r\n                ()=>{\r\n                    this.onSelect(0)\r\n                }\r\n             )\r\n        }\r\n    }\r\n\r\n    onSelect = (index:any)=>{\r\n        var nowTime = Date.now();\r\n        if((nowTime - this.lastTime)<100){\r\n            return\r\n        }\r\n        this.lastTime = nowTime;\r\n        let obj = this.state.previewObject[index]\r\n        if(obj.type == \"html\")\r\n        {\r\n            this.setState({isHtmlContent:true,isMDContent:false})\r\n            for(let key in obj)\r\n            {\r\n                if(key != \"type\")\r\n                {\r\n                    const htmlStr = obj[key]\r\n                    this.setState({htmlContent:htmlStr})\r\n                }\r\n            }\r\n        }else\r\n        {\r\n            this.setState({isHtmlContent:false,isMDContent:true})\r\n            for(let key in obj)\r\n            {\r\n                if(key != \"type\")\r\n                {\r\n                    const mdStr = obj[key]\r\n                    this.setState({mdContent:mdStr})\r\n                }\r\n            }\r\n        }\r\n        this.setState({menuIndex:index})\r\n    }\r\n    \r\n    _renderLeftMenu = ()=> {\r\n        return (\r\n            /*<Layout.Row style={{display:\"flex\",justifyContent:\"center\"}}>*/\r\n            <Layout.Row>\r\n                <Layout.Col span=\"3\" className=\"cl-col1\">\r\n                    <div className=\"grid-content bg-purple\">\r\n                        <Menu mode=\"vertical\" defaultActive={this.state.menuIndex} className=\"el-menu-vertical-demo\" onSelect = {this.onSelect}>\r\n                            <Menu.ItemGroup title=\"\">\r\n                               {\r\n                                    this.state.previewObject?.map((obj: any, position: number)=>{\r\n                                        let showStr = \"\"\r\n                                        for(let key in obj)\r\n                                        {\r\n                                            {\r\n                                                if(key != \"type\")\r\n                                                {\r\n                                                    showStr = key\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        return <Menu.Item index={\"\"+position} key={\"\"+position}><i className=\"el-icon-message\"></i>{showStr}</Menu.Item>\r\n                                    })\r\n                                }\r\n                            </Menu.ItemGroup>\r\n                        </Menu>\r\n                    </div>\r\n                </Layout.Col>\r\n                {\r\n                    !this.state.isEmptyContent && this.state.isHtmlContent && this._renderHtml()\r\n                }\r\n                {\r\n                    !this.state.isEmptyContent && this.state.isMDContent && this._renderMD()\r\n                }\r\n            </Layout.Row>\r\n        )\r\n    }\r\n    \r\n    //Layout.Col100%是24\r\n    _renderHtml = ()=> {\r\n        return (\r\n            <Layout.Col span=\"21\">\r\n                <div className=\"htmlContent\">\r\n                     <div dangerouslySetInnerHTML={{__html:this.state.htmlContent}}></div>\r\n                </div>    \r\n            </Layout.Col>\r\n        )\r\n    }\r\n\r\n    _renderMD = ()=> {\r\n        return (\r\n            <Layout.Col span=\"21\">\r\n                <div className=\"mdContent\">\r\n                    <ReactMarkdown children={this.state.mdContent} remarkPlugins={[remarkGfm]} rehypePlugins={[rehypeRaw]} className = \"markdown-body\"/>\r\n                </div>\r\n            </Layout.Col>\r\n        )\r\n    }\r\n    \r\n    _renderEmptyContent(){\r\n        return (\r\n            <div>please config content</div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"PreviewPage\">\r\n                {\r\n                  this.state.isEmptyContent && this._renderEmptyContent()\r\n                }\r\n                { !this.state.isEmptyContent && this._renderLeftMenu()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\r\nimport JsonPage from \"../json/JsonPage\";\r\nimport TimePage from \"../time/TimePage\";\r\nimport MainPage from \"./MainPage\";\r\nimport CodePage from \"../code/CodePage\";\r\nimport PreviewPage from \"../preview/PreviewPage\";\r\n\r\nconst BasicRouter = () => (\r\n    <HashRouter>\r\n        <Switch>\r\n            <Route path=\"/\" component={(props:any)=>(\r\n                    <MainPage {...props}>\r\n                        <Route exact path=\"/\" component={JsonPage}/>\r\n                        <Route exact path=\"/jsonpage\" component={JsonPage}/>\r\n                        <Route exact path=\"/previewpage\" component={PreviewPage}/>\r\n                        <Route  path=\"/timepage\" component={TimePage}/>\r\n                        <Route  path=\"/codepage\" component={CodePage}/>\r\n                    </MainPage>\r\n                )\r\n            }/>\r\n        </Switch>\r\n    </HashRouter>\r\n);\r\n\r\n\r\nexport default BasicRouter;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'element-theme-default';\r\nimport BasicRouter from './page/root/AppRoute';\r\n\r\nReactDOM.render(\r\n /* <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,*/\r\n/*   <HashRouter>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={MainPage}/>\r\n        </Switch>\r\n   </HashRouter>,*/\r\n   <BasicRouter />,\r\n   document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}